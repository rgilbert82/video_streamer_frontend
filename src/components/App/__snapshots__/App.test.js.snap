// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class App extends _react2.default.Component {
  constructor(props) {
    super(props);

    this.state = {
      message: false,
      loggedIn: false,
      currentUser: {} };


    this.googleLogin = this.googleLogin.bind(this);
    this.googleLogout = this.googleLogout.bind(this);
    this.loginFailure = this.loginFailure.bind(this);
    this.displayMessage = this.displayMessage.bind(this);
    this.closeMessage = this.closeMessage.bind(this);
  }

  displayMessage(message) {
    this.setState({ message: message });
  }

  closeMessage() {
    this.setState({ message: false });
  }

  googleLogin(googleUser) {
    const profile = {
      name: googleUser.profileObj.name,
      email: googleUser.profileObj.email,
      imageUrl: googleUser.profileObj.imageUrl,
      accessToken: googleUser.accessToken };


    this.setState({ loggedIn: true, currentUser: profile });
  }

  googleLogout() {
    this.setState({ loggedIn: false, currentUser: {} });
  }

  loginFailure() {
    this.displayMessage('There was an error logging in to your Google account.');
  }

  render() {
    let messageBox;

    if (this.state.message) {
      messageBox = _react2.default.createElement(_Misc.MessageBox, { message: this.state.message, closeMessage: this.closeMessage, __source: { fileName: _jsxFileName, lineNumber: 53 }, __self: this });
    }

    return (
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 57 }, __self: this },
        _react2.default.createElement(_.Header, {
          loggedIn: this.state.loggedIn,
          googleLogin: this.googleLogin,
          googleLogout: this.googleLogout,
          loginFailure: this.loginFailure, __source: { fileName: _jsxFileName, lineNumber: 58 }, __self: this }),


        messageBox,

        _react2.default.createElement(_.Main, { __source: { fileName: _jsxFileName, lineNumber: 67 }, __self: this })));


  }} renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header
          googleLogin={[Function]}
          googleLogout={[Function]}
          loggedIn={false}
          loginFailure={[Function]}
/>,
        undefined,
        <Main />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "googleLogin": [Function],
          "googleLogout": [Function],
          "loggedIn": false,
          "loginFailure": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header
            googleLogin={[Function]}
            googleLogout={[Function]}
            loggedIn={false}
            loginFailure={[Function]}
/>,
          undefined,
          <Main />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "googleLogin": [Function],
            "googleLogout": [Function],
            "loggedIn": false,
            "loginFailure": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
