// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class UserCommentListItem extends _react2.default.Component {
  constructor(props) {
    super(props);
    this.state = {
      comment: this.props.commentObj.comment,
      video: this.props.commentObj.video };

  }

  render() {
    const videoPath = \`/videos/\${this.state.video.id}\`;

    return (
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 17 }, __self: this },
        _react2.default.createElement('p', { __source: { fileName: _jsxFileName, lineNumber: 18 }, __self: this }, this.state.comment.message),
        _react2.default.createElement('span', { __source: { fileName: _jsxFileName, lineNumber: 19 }, __self: this }, 'From video: ', _react2.default.createElement(_reactRouterDom.Link, { to: videoPath, __source: { fileName: _jsxFileName, lineNumber: 19 }, __self: this }, this.state.video.title)),
        _react2.default.createElement('small', { __source: { fileName: _jsxFileName, lineNumber: 20 }, __self: this }, this.state.comment.published_at)));


  }} renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserCommentListItem
    commentObj={
        Object {
            "comment": Object {
              "message": "hello",
              "published_at": "2018",
            },
            "video": Object {
              "id": "123",
              "title": "video title",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p>
          hello
</p>,
        <span>
          From video: 
          <Link
                    replace={false}
                    to="/videos/123"
          >
                    video title
          </Link>
</span>,
        <small>
          2018
</small>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "hello",
        },
        "ref": null,
        "rendered": "hello",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "From video: ",
            <Link
              replace={false}
              to="/videos/123"
>
              video title
</Link>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "From video: ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "video title",
              "replace": false,
              "to": "/videos/123",
            },
            "ref": null,
            "rendered": "video title",
            "type": [Function],
          },
        ],
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "2018",
        },
        "ref": null,
        "rendered": "2018",
        "type": "small",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p>
            hello
</p>,
          <span>
            From video: 
            <Link
                        replace={false}
                        to="/videos/123"
            >
                        video title
            </Link>
</span>,
          <small>
            2018
</small>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "hello",
          },
          "ref": null,
          "rendered": "hello",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "From video: ",
              <Link
                replace={false}
                to="/videos/123"
>
                video title
</Link>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "From video: ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "video title",
                "replace": false,
                "to": "/videos/123",
              },
              "ref": null,
              "rendered": "video title",
              "type": [Function],
            },
          ],
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "2018",
          },
          "ref": null,
          "rendered": "2018",
          "type": "small",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
