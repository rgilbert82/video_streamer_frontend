// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class UserPage extends _react2.default.Component {
  constructor(props) {
    super(props);

    this.state = {
      pageLoaded: false,
      comments: [],
      user: {} };


    this.fetchUser = this.fetchUser.bind(this);
  }

  componentDidMount() {
    this._isMounted = true;
    if (this._isMounted) {
      this.fetchUser();
    }
  }

  componentWillUnmount() {
    this._isMounted = false;
  }

  fetchUser() {
    (0, _users.getUserApi)(this.props.match.params.user_id).
    then(data => {
      this.setState({ pageLoaded: true, comments: data.comments, user: data.user });
      console.log(this.state);
    }).catch(err => {
      console.log('ERROR');
    });
  }

  render() {
    let content;

    if (this.state.pageLoaded) {
      content =
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 44 }, __self: this },
        _react2.default.createElement('p', { __source: { fileName: _jsxFileName, lineNumber: 45 }, __self: this }, 'User content goes here'));


    } else {
      content = _react2.default.createElement(_Misc.PageLoading, { __source: { fileName: _jsxFileName, lineNumber: 49 }, __self: this });
    }

    return (
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 53 }, __self: this },
        _react2.default.createElement('h2', { __source: { fileName: _jsxFileName, lineNumber: 54 }, __self: this }, 'User Page'),
        content));


  }} renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserPage
    match={
        Object {
            "params": Object {
              "user_id": "12345",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          User Page
</h2>,
        <PageLoading />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "User Page",
        },
        "ref": null,
        "rendered": "User Page",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            User Page
</h2>,
          <PageLoading />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "User Page",
          },
          "ref": null,
          "rendered": "User Page",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
