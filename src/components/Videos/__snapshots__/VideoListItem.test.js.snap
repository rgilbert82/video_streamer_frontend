// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class VideoListItem extends _react2.default.Component {
  render() {
    const linkPath = \`/videos/\${this.props.video.content.id}\`;
    let chat_enabled;

    if (this.props.video.chat_enabled) {
      chat_enabled = _react2.default.createElement('aside', { __source: { fileName: _jsxFileName, lineNumber: 10 }, __self: this }, 'live chat is available');
    } else {
      chat_enabled = _react2.default.createElement('aside', { __source: { fileName: _jsxFileName, lineNumber: 12 }, __self: this }, 'live chat is disabled');
    }

    return (
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 16 }, __self: this },
        _react2.default.createElement(_reactRouterDom.Link, { to: linkPath, __source: { fileName: _jsxFileName, lineNumber: 17 }, __self: this }, _react2.default.createElement('h3', { __source: { fileName: _jsxFileName, lineNumber: 17 }, __self: this }, this.props.video.content.title)),
        _react2.default.createElement(_reactRouterDom.Link, { to: linkPath, __source: { fileName: _jsxFileName, lineNumber: 18 }, __self: this }, _react2.default.createElement('img', { src: this.props.video.content.thumbnail, alt: this.props.video.content.title, __source: { fileName: _jsxFileName, lineNumber: 18 }, __self: this })),
        _react2.default.createElement('p', { __source: { fileName: _jsxFileName, lineNumber: 19 }, __self: this }, this.props.video.content.description),
        chat_enabled));


  }} renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VideoListItem
    video={
        Object {
            "chat_enabled": true,
            "content": Object {
              "channel_id": "456",
              "description": "description",
              "id": "123",
              "published_at": "2017-05-09T15:12:42+00:00",
              "thumbnail": "http://thumbnail",
              "title": "title",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/videos/123"
>
          <h3>
                    title
          </h3>
</Link>,
        <Link
          replace={false}
          to="/videos/123"
>
          <img
                    alt="title"
                    src="http://thumbnail"
          />
</Link>,
        <p>
          description
</p>,
        <aside>
          live chat is available
</aside>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <h3>
            title
</h3>,
          "replace": false,
          "to": "/videos/123",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "title",
          },
          "ref": null,
          "rendered": "title",
          "type": "h3",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <img
            alt="title"
            src="http://thumbnail"
/>,
          "replace": false,
          "to": "/videos/123",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "title",
            "src": "http://thumbnail",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "description",
        },
        "ref": null,
        "rendered": "description",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "live chat is available",
        },
        "ref": null,
        "rendered": "live chat is available",
        "type": "aside",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/videos/123"
>
            <h3>
                        title
            </h3>
</Link>,
          <Link
            replace={false}
            to="/videos/123"
>
            <img
                        alt="title"
                        src="http://thumbnail"
            />
</Link>,
          <p>
            description
</p>,
          <aside>
            live chat is available
</aside>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <h3>
              title
</h3>,
            "replace": false,
            "to": "/videos/123",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "title",
            },
            "ref": null,
            "rendered": "title",
            "type": "h3",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <img
              alt="title"
              src="http://thumbnail"
/>,
            "replace": false,
            "to": "/videos/123",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "title",
              "src": "http://thumbnail",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "description",
          },
          "ref": null,
          "rendered": "description",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "live chat is available",
          },
          "ref": null,
          "rendered": "live chat is available",
          "type": "aside",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
