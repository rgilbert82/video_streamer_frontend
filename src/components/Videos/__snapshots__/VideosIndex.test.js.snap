// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class VideosIndex extends _react2.default.Component {
  constructor(props) {
    super(props);

    this.state = {
      pageLoaded: false,
      videos: [] };


    this.fetchVideos = this.fetchVideos.bind(this);
  }

  componentDidMount() {
    this._isMounted = true;
    if (this._isMounted) {
      this.fetchVideos();
    }
  }

  componentWillUnmount() {
    this._isMounted = false;
  }

  fetchVideos() {
    return (0, _videos.getVideosApi)().
    then(data => {
      this.setState({ videos: data, pageLoaded: true });
      console.log(this.state.videos);
    }).catch(err => {
      this.props.displayMessage('There was an error loading the videos');
    });
  }

  render() {
    let content;
    let videos;

    if (this.state.pageLoaded) {
      if (this.state.videos.length > 0) {
        videos = this.state.videos.map(video => {
          return (
            _react2.default.createElement('li', { key: video.content.id, __source: { fileName: _jsxFileName, lineNumber: 47 }, __self: this },
              _react2.default.createElement(_.VideoListItem, { video: video, __source: { fileName: _jsxFileName, lineNumber: 48 }, __self: this })));


        });
      } else {
        videos =
        _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 54 }, __self: this },
          _react2.default.createElement('p', { __source: { fileName: _jsxFileName, lineNumber: 55 }, __self: this }, 'There are no videos here...'));


      }

      content =
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 61 }, __self: this },
        _react2.default.createElement('h2', { __source: { fileName: _jsxFileName, lineNumber: 62 }, __self: this }, 'Select a video stream'),
        _react2.default.createElement('ul', { __source: { fileName: _jsxFileName, lineNumber: 63 }, __self: this },
          videos));



    } else {
      content = _react2.default.createElement(_Misc.PageLoading, { __source: { fileName: _jsxFileName, lineNumber: 69 }, __self: this });
    }

    return (
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 73 }, __self: this },
        _react2.default.createElement('h2', { __source: { fileName: _jsxFileName, lineNumber: 74 }, __self: this }, 'Videos index'),
        content));


  }} renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VideosIndex
    displayMessage={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Videos index
</h2>,
        <PageLoading />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Videos index",
        },
        "ref": null,
        "rendered": "Videos index",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Videos index
</h2>,
          <PageLoading />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Videos index",
          },
          "ref": null,
          "rendered": "Videos index",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
