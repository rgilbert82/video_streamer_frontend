// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class VideoMain extends _react2.default.Component {
  render() {
    let commentsList;

    if (this.props.chat) {
      commentsList =
      _react2.default.createElement(_Chat.ChatWindow, {
        chat: this.props.chat,
        loggedIn: this.props.loggedIn,
        currentUser: this.props.currentUser,
        displayMessage: this.props.displayMessage, __source: { fileName: _jsxFileName, lineNumber: 11 }, __self: this });


    } else {
      commentsList =
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 20 }, __self: this },
        _react2.default.createElement('p', { __source: { fileName: _jsxFileName, lineNumber: 21 }, __self: this }, 'Chat disabled for this video'));


    }

    return (
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 27 }, __self: this },
        _react2.default.createElement(_.VideoPlayer, { video: this.props.video, __source: { fileName: _jsxFileName, lineNumber: 28 }, __self: this }),
        commentsList));


  }} renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VideoMain
    displayMessage={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <VideoPlayer
          video={undefined}
/>,
        <div>
          <p>
                    Chat disabled for this video
          </p>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "video": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            Chat disabled for this video
</p>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Chat disabled for this video",
          },
          "ref": null,
          "rendered": "Chat disabled for this video",
          "type": "p",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <VideoPlayer
            video={undefined}
/>,
          <div>
            <p>
                        Chat disabled for this video
            </p>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "video": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              Chat disabled for this video
</p>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Chat disabled for this video",
            },
            "ref": null,
            "rendered": "Chat disabled for this video",
            "type": "p",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
